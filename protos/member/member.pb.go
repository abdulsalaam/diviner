// Code generated by protoc-gen-go. DO NOT EDIT.
// source: member/member.proto

/*
Package member is a generated protocol buffer package.

It is generated from these files:
	member/member.proto

It has these top-level messages:
	Member
	MemberCreateRequest
	MemberQueryRequest
	MemberInfoResponse
*/
package member

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "diviner/protos/common"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Member struct {
	Id      string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Address string  `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Balance float64 `protobuf:"fixed64,3,opt,name=balance" json:"balance,omitempty"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Member) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Member) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Member) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type MemberCreateRequest struct {
	Member *Member              `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	Check  *common.Verification `protobuf:"bytes,2,opt,name=check" json:"check,omitempty"`
}

func (m *MemberCreateRequest) Reset()                    { *m = MemberCreateRequest{} }
func (m *MemberCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*MemberCreateRequest) ProtoMessage()               {}
func (*MemberCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MemberCreateRequest) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *MemberCreateRequest) GetCheck() *common.Verification {
	if m != nil {
		return m.Check
	}
	return nil
}

type MemberQueryRequest struct {
	Id    string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Check *common.Verification `protobuf:"bytes,2,opt,name=check" json:"check,omitempty"`
}

func (m *MemberQueryRequest) Reset()                    { *m = MemberQueryRequest{} }
func (m *MemberQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*MemberQueryRequest) ProtoMessage()               {}
func (*MemberQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MemberQueryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MemberQueryRequest) GetCheck() *common.Verification {
	if m != nil {
		return m.Check
	}
	return nil
}

type MemberInfoResponse struct {
	Member *Member                    `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	Time   *google_protobuf.Timestamp `protobuf:"bytes,999,opt,name=time" json:"time,omitempty"`
}

func (m *MemberInfoResponse) Reset()                    { *m = MemberInfoResponse{} }
func (m *MemberInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*MemberInfoResponse) ProtoMessage()               {}
func (*MemberInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MemberInfoResponse) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *MemberInfoResponse) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*Member)(nil), "member.Member")
	proto.RegisterType((*MemberCreateRequest)(nil), "member.MemberCreateRequest")
	proto.RegisterType((*MemberQueryRequest)(nil), "member.MemberQueryRequest")
	proto.RegisterType((*MemberInfoResponse)(nil), "member.MemberInfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MemberService service

type MemberServiceClient interface {
	Query(ctx context.Context, in *MemberQueryRequest, opts ...grpc.CallOption) (*MemberInfoResponse, error)
	Create(ctx context.Context, in *MemberCreateRequest, opts ...grpc.CallOption) (*MemberInfoResponse, error)
}

type memberServiceClient struct {
	cc *grpc.ClientConn
}

func NewMemberServiceClient(cc *grpc.ClientConn) MemberServiceClient {
	return &memberServiceClient{cc}
}

func (c *memberServiceClient) Query(ctx context.Context, in *MemberQueryRequest, opts ...grpc.CallOption) (*MemberInfoResponse, error) {
	out := new(MemberInfoResponse)
	err := grpc.Invoke(ctx, "/member.MemberService/Query", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) Create(ctx context.Context, in *MemberCreateRequest, opts ...grpc.CallOption) (*MemberInfoResponse, error) {
	out := new(MemberInfoResponse)
	err := grpc.Invoke(ctx, "/member.MemberService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MemberService service

type MemberServiceServer interface {
	Query(context.Context, *MemberQueryRequest) (*MemberInfoResponse, error)
	Create(context.Context, *MemberCreateRequest) (*MemberInfoResponse, error)
}

func RegisterMemberServiceServer(s *grpc.Server, srv MemberServiceServer) {
	s.RegisterService(&_MemberService_serviceDesc, srv)
}

func _MemberService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/member.MemberService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Query(ctx, req.(*MemberQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/member.MemberService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Create(ctx, req.(*MemberCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemberService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "member.MemberService",
	HandlerType: (*MemberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _MemberService_Query_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _MemberService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "member/member.proto",
}

func init() { proto.RegisterFile("member/member.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0xc1, 0x4e, 0xeb, 0x30,
	0x10, 0x7c, 0xe9, 0xa3, 0xa9, 0xd8, 0x8a, 0x1e, 0x5c, 0x0e, 0x51, 0x38, 0x50, 0xe5, 0x80, 0x2a,
	0x0e, 0x89, 0x54, 0xbe, 0x00, 0xf5, 0x84, 0x04, 0x12, 0x18, 0xc4, 0xdd, 0x71, 0xb6, 0xc5, 0xa2,
	0x8e, 0x8b, 0xed, 0x22, 0xf1, 0x25, 0x7c, 0x22, 0xbf, 0x81, 0xea, 0x8d, 0xa5, 0xb6, 0x07, 0x04,
	0x27, 0x6b, 0x33, 0xb3, 0xb3, 0x33, 0x13, 0x18, 0x6b, 0xd4, 0x35, 0xda, 0x8a, 0x9e, 0x72, 0x6d,
	0x8d, 0x37, 0x2c, 0xa5, 0x29, 0x1f, 0x4b, 0xa3, 0xb5, 0x69, 0x2b, 0x7a, 0x08, 0xcc, 0xcf, 0x97,
	0xc6, 0x2c, 0x57, 0x58, 0x85, 0xa9, 0xde, 0x2c, 0x2a, 0xaf, 0x34, 0x3a, 0x2f, 0xf4, 0x9a, 0x08,
	0xc5, 0x2d, 0xa4, 0x77, 0x61, 0x9f, 0x8d, 0xa0, 0xa7, 0x9a, 0x2c, 0x99, 0x24, 0xd3, 0x63, 0xde,
	0x53, 0x0d, 0xcb, 0x60, 0x20, 0x9a, 0xc6, 0xa2, 0x73, 0x59, 0x2f, 0x7c, 0x8c, 0xe3, 0x16, 0xa9,
	0xc5, 0x4a, 0xb4, 0x12, 0xb3, 0xff, 0x93, 0x64, 0x9a, 0xf0, 0x38, 0x16, 0x0a, 0xc6, 0xa4, 0x36,
	0xb7, 0x28, 0x3c, 0x72, 0x7c, 0xdb, 0xa0, 0xf3, 0xec, 0x02, 0x3a, 0x93, 0x41, 0x7e, 0x38, 0x1b,
	0x95, 0x5d, 0x02, 0x22, 0xf3, 0x0e, 0x65, 0x97, 0xd0, 0x97, 0x2f, 0x28, 0x5f, 0xc3, 0xc1, 0xe1,
	0xec, 0xb4, 0xec, 0xb2, 0x3c, 0xa3, 0x55, 0x0b, 0x25, 0x85, 0x57, 0xa6, 0xe5, 0x44, 0x29, 0xee,
	0x81, 0xd1, 0xf6, 0xc3, 0x06, 0xed, 0x47, 0xbc, 0x74, 0x18, 0xe2, 0x2f, 0x8a, 0x3a, 0x2a, 0xde,
	0xb4, 0x0b, 0xc3, 0xd1, 0xad, 0x4d, 0xeb, 0xf0, 0xd7, 0xde, 0x2b, 0x38, 0xda, 0x76, 0x9b, 0x7d,
	0x0d, 0x02, 0x2d, 0x2f, 0xa9, 0xf9, 0x32, 0x36, 0x5f, 0x3e, 0xc5, 0xe6, 0x79, 0x20, 0xce, 0x3e,
	0x13, 0x38, 0x21, 0x8d, 0x47, 0xb4, 0xef, 0x4a, 0x22, 0xbb, 0x86, 0x7e, 0x08, 0xc3, 0xf2, 0xfd,
	0x1b, 0xbb, 0x09, 0xf3, 0x03, 0x6c, 0xd7, 0x6b, 0xf1, 0x8f, 0xcd, 0x21, 0xa5, 0xea, 0xd9, 0xd9,
	0x3e, 0x6f, 0xef, 0x87, 0xfc, 0x2c, 0x52, 0xa7, 0xc1, 0xf3, 0xd5, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xa5, 0x57, 0xf7, 0x39, 0x6f, 0x02, 0x00, 0x00,
}
